(()=>{"use strict";let e=function(e){return e.Run="run",e.SetSharedBuffers="setSharedBuffers",e}({}),t=function(e){return e[e.Waiting=0]="Waiting",e[e.Ready=1]="Ready",e}({}),r=function(e){return e[e.NoInterrupt=0]="NoInterrupt",e[e.Sigint=2]="Sigint",e}({}),n=function(e){return e.WorkerReady="workerReady",e.ExecutionSucceeded="executionSucceeded",e.ExecutionError="executionError",e.OverriddenExitCalled="overriddenExitCalled",e.StdinRequest="stdinRequest",e.StdoutUpdate="stdoutUpdate",e.StderrUpdate="stderrUpdate",e}({});const i="exit() called. The default `exit` function is disabled.";let o=()=>{throw new Error("resolvePyodideProm was called before it was set by the Promise callback.")},d=e=>{throw e};const s=new Promise(((e,t)=>{o=e,d=t}));let u,c,a="",f=()=>{},l=()=>{},w=()=>{},S=()=>{};self.onmessage=o=>{const{data:d}=o;if(d.kind===e.SetSharedBuffers)return void s.then((e=>{u=d.stdinBusBuffer;const{waitBuffer:i}=d;f=()=>{Atomics.store(new Int32Array(i),0,t.Waiting)},l=()=>{Atomics.wait(new Int32Array(i),0,t.Waiting),S()};const{interruptBuffer:o}=d;e.setInterruptBuffer(new Int32Array(o)),w=()=>{Atomics.store(new Int32Array(o),0,r.NoInterrupt)},S=()=>{e.checkInterrupt()},e.registerJsModule("js",{}),e.registerJsModule("pyodide_js",{}),e.registerJsModule("koja",{print_info:()=>{y((new TextEncoder).encode("Koja v".concat("1.0.10","\nCopyright 2024 Kyle Lin.\n")))}}),g({kind:n.WorkerReady})}));if(d.kind===e.Run)return a="",w(),void s.then((e=>{var t;c=null!==(t=c)&&void 0!==t?t:(()=>{const t=()=>{throw new Error(i)};return t.toString=()=>"Use exit() or Ctrl-D (i.e. EOF) to exit",e.toPy({exit:t})})();try{e.runPython(d.code,{locals:c}),g({kind:n.ExecutionSucceeded})}catch(r){if(String(r).includes(i))return void g({kind:n.OverriddenExitCalled});g({kind:n.ExecutionError,errorString:String(r)})}}))},self.importScripts("/pyodide_0.26.1/pyodide.js");function h(){if(void 0===u)throw new Error("Called handleStdinRequest before stdinBusBuffer was set.");for(;;){const e=a.indexOf("\n");if(-1!==e){const t=a.slice(0,e+1);return a=a.slice(e+1),t}f(),g({kind:n.StdinRequest}),l();const t=new Uint32Array(u)[0],r=new Uint8Array(u,4,t).slice();Atomics.store(new Uint32Array(u),0,0);const i=(new TextDecoder).decode(r);a+=i}}function y(e){if(void 0===u)throw new Error("Called handleStdoutRequest before stdinBusBuffer was set.");const t=e.length;return f(),g({kind:n.StdoutUpdate,output:e}),l(),t}function p(e){if(void 0===u)throw new Error("Called handleStderrRequest before stdinBusBuffer was set.");const t=e.length;return f(),g({kind:n.StderrUpdate,output:e}),l(),t}function g(e){self.postMessage(e)}(0,self.loadPyodide)().then((e=>{e.setStdin({stdin:h}),e.setStdout({write:y}),e.setStderr({write:p}),o(e)}),d)})();
//# sourceMappingURL=924.8f33cc06.chunk.js.map