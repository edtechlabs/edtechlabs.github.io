(()=>{"use strict";let e=function(e){return e.Run="run",e.SetSharedBuffers="setSharedBuffers",e}({}),t=function(e){return e[e.Waiting=0]="Waiting",e[e.Ready=1]="Ready",e}({}),r=function(e){return e[e.NoInterrupt=0]="NoInterrupt",e[e.Sigint=2]="Sigint",e}({}),n=function(e){return e.WorkerReady="workerReady",e.ExecutionSucceeded="executionSucceeded",e.ExecutionError="executionError",e.StdinRequest="stdinRequest",e.StdoutUpdate="stdoutUpdate",e.StderrUpdate="stderrUpdate",e}({});let o=()=>{throw new Error("resolvePyodideProm was called before it was set by the Promise callback.")},i=e=>{throw e};const d=new Promise(((e,t)=>{o=e,i=t}));let s,u="",c=()=>{},a=()=>{},f=()=>{},l=()=>{};self.onmessage=o=>{const{data:i}=o;if(i.kind===e.SetSharedBuffers)return void d.then((e=>{s=i.stdinBusBuffer;const{waitBuffer:o}=i;c=()=>{Atomics.store(new Int32Array(o),0,t.Waiting)},a=()=>{Atomics.wait(new Int32Array(o),0,t.Waiting),l()};const{interruptBuffer:d}=i;e.setInterruptBuffer(new Int32Array(d)),f=()=>{Atomics.store(new Int32Array(d),0,r.NoInterrupt)},l=()=>{e.checkInterrupt()},e.registerJsModule("js",{}),e.registerJsModule("pyodide_js",{}),e.registerJsModule("koja",{print_info:()=>{S((new TextEncoder).encode("Koja v".concat("1.0.7","\nCopyright 2024 Kyle Lin.\n")))}}),y({kind:n.WorkerReady})}));if(i.kind===e.Run)return u="",f(),void d.then((e=>{try{e.runPython(i.code),y({kind:n.ExecutionSucceeded})}catch(t){y({kind:n.ExecutionError,errorString:String(t)})}}))},self.importScripts("/pyodide_0.26.1/pyodide.js");function w(){if(void 0===s)throw new Error("Called handleStdinRequest before stdinBusBuffer was set.");for(;;){const e=u.indexOf("\n");if(-1!==e){const t=u.slice(0,e+1);return u=u.slice(e+1),t}c(),y({kind:n.StdinRequest}),a();const t=new Uint32Array(s)[0],r=new Uint8Array(s,4,t).slice();Atomics.store(new Uint32Array(s),0,0);const o=(new TextDecoder).decode(r);u+=o}}function S(e){if(void 0===s)throw new Error("Called handleStdoutRequest before stdinBusBuffer was set.");const t=e.length;return c(),y({kind:n.StdoutUpdate,output:e}),a(),t}function p(e){if(void 0===s)throw new Error("Called handleStderrRequest before stdinBusBuffer was set.");const t=e.length;return c(),y({kind:n.StderrUpdate,output:e}),a(),t}function y(e){self.postMessage(e)}(0,self.loadPyodide)().then((e=>{e.setStdin({stdin:w}),e.setStdout({write:S}),e.setStderr({write:p}),o(e)}),i)})();
//# sourceMappingURL=924.56a7361f.chunk.js.map